<Page Name="MainPage"
      x:Class="UniSearchUWPNS.SearchPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:UniSearchUWPNS"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=local:ViewModel}"
      d:DesignWidth="1000" d:DesignHeight="350" 
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" 
      FontFamily="Segoe UI" >


    <Page.Resources>
        <DataTemplate x:Key="BlockTemplate">
            <Grid>
                <TextBlock
                    Text="{Binding Content}" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"
                    Style="{ThemeResource BodyTextBlockStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip Content="{Binding Block.BlockNameAndRange}" />
                    </ToolTipService.ToolTip>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="GroupTemplate">
            <Grid>
                <TextBlock
                    Text="{Binding Content}" 
                    FontWeight="Bold"
                    FontSize="18"
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"
                    Style="{ThemeResource BodyTextBlockStyle}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="GroupL1Template">
            <Grid>
                <TextBlock
                    Text="{Binding Content}" 
                    FontWeight="SemiBold"
                    FontSize="16"
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"
                    Style="{ThemeResource BodyTextBlockStyle}"/>
            </Grid>
        </DataTemplate>

        <local:BlockGroupItemTemplateSelector x:Key="BlockGroupItemTemplateSelector" 
            BlockTemplate="{StaticResource BlockTemplate}"
            GroupL1Template="{StaticResource GroupL1Template}"
            GroupTemplate="{StaticResource GroupTemplate}" />

        <Style TargetType="TreeView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <TreeViewList x:Name="ListControl" 
                                      ItemTemplateSelector="{StaticResource BlockGroupItemTemplateSelector}"
                                      CanDragItems="True" AllowDrop="True" CanReorderItems="True">
                            <!--ItemTemplate="{StaticResource BlockTemplate}"-->
                            <TreeViewList.ItemContainerStyle>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle}" >
                                    <Setter Property="MinHeight" Value="32" />
                                </Style>
                            </TreeViewList.ItemContainerStyle>
                            <TreeViewList.ItemContainerTransitions>
                                <TransitionCollection>
                                    <ContentThemeTransition />
                                    <ReorderThemeTransition />
                                    <EntranceThemeTransition IsStaggeringEnabled="False" />
                                </TransitionCollection>
                            </TreeViewList.ItemContainerTransitions>
                        </TreeViewList>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Default tooltip template has a MaxWidth of 320 and it can't be changed, so this is a version with MaxWidth=2000 -->
        <!-- https://stackoverflow.com/questions/42254473/uwp-change-tooltip-height-width -->
        <Style x:Key="LargeTooltipStyle" TargetType="ToolTip">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <ContentPresenter
                                     x:Name="LayoutRoot"
                                     MaxWidth="2000"
                                     Padding="{TemplateBinding Padding}"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Content="{TemplateBinding Content}"
                                     ContentTemplate="{TemplateBinding ContentTemplate}"
                                     ContentTransitions="{TemplateBinding ContentTransitions}"
                                     TextWrapping="Wrap">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OpenStates">
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <FadeInThemeAnimation TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:NullableBooleanToBooleanConverter x:Key="nullableBooleanToBooleanConverter" />

    </Page.Resources>




    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <CommandBar DefaultLabelPosition="Right" >
            <AppBarToggleButton Name="SettingsButton" AccessKey="S" IsChecked="False" Icon="Setting" Label="Settings" />

            <CommandBar.SecondaryCommands>
                <AppBarButton Name="AboutButton" Label="About" Command="{Binding AboutCommand}" >
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe UI Emoji" Glyph="🛈" FontSize="24" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>

            <CommandBar.Content>
                <CommandBar DefaultLabelPosition="Right" OverflowButtonVisibility="Collapsed">
                    <AppBarToggleButton Name="BlocksToggleButton" Icon="DockLeft" Label="Blocks" IsChecked="True" AccessKey="F" />
                    <AppBarButton Name="CopyCharsButton" AccessKey="C" Icon="Copy" Label="Chars" Command="{Binding CopyRecordsCommand}" CommandParameter="0"  >
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="C" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy selected chars (Ctrl+C)" />
                        </ToolTipService.ToolTip>
                    </AppBarButton>
                    <AppBarButton Name="CopyLinesButton" AccessKey="L" Icon="Copy" Label="Lines" Command="{Binding CopyRecordsCommand}" CommandParameter="1"  >
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="L" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy Character, Codepoint and Name of selected chars (Ctrl+L)" />
                        </ToolTipService.ToolTip>
                    </AppBarButton>
                    <AppBarButton Name="CopyDetailsButton" AccessKey="D" Icon="Copy" Label="Details" Command="{Binding CopyRecordsCommand}" CommandParameter="2" HorizontalAlignment="Center" >
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="D" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy details of selected chars (Ctrl+D)" />
                        </ToolTipService.ToolTip>
                    </AppBarButton>
                    <AppBarButton Name="CopyFullInfoButton" AccessKey="F" Icon="Copy" Label="Full Info" Command="{Binding CopyRecordsCommand}" CommandParameter="3" HorizontalAlignment="Center" >
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="F" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy full information of selected chars (Ctrl+F)" />
                        </ToolTipService.ToolTip>
                    </AppBarButton>

                    <AppBarButton Name="CopyImageButton" AccessKey="I" Icon="Copy" Label="Image" Command="{Binding CopyImageCommand}" >
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="I" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy image of selected char (Ctrl+I)" />
                        </ToolTipService.ToolTip>
                    </AppBarButton>

                    <AppBarButton Name="SwitchGridListButton" AccessKey="G" Label="List/Grid" Click="ListGrid_Click" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Top" >
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe UI Emoji" Glyph="𝄙 ⭤  𝄝" FontSize="24" />
                        </AppBarButton.Icon>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control" Key="G" />
                        </AppBarButton.KeyboardAccelerators>
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Toggle between Grid and List view (Ctrl+G)" />
                        </ToolTipService.ToolTip>

                    </AppBarButton>
                </CommandBar>
            </CommandBar.Content>
        </CommandBar>


        <SplitView Grid.Row="1" Name="MainSplitView" x:FieldModifier="internal" 
                   IsPaneOpen="{x:Bind SettingsButton.IsChecked, Mode=TwoWay, Converter={StaticResource nullableBooleanToBooleanConverter}}"
                   DisplayMode="Overlay" PanePlacement="Right" OpenPaneLength="280">

            <SplitView.Pane>
                <!-- Options Panel -->
                <Grid Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Vertical" Grid.Row="1" Margin="12">
                        <TextBlock Name="AssemblyTitle" FontWeight="Bold" />
                        <TextBlock Name="AssemblyDescription" Margin="0,3,0,0" TextWrapping="Wrap" />
                        <TextBlock Name="AssemblyVersion" />
                        <TextBlock Name="AssemblyCopyright" />

                        <TextBlock Name="UniDataTitle" FontWeight="Bold" Margin="0,12,0,0" />
                        <TextBlock Name="UniDataDescription" Margin="0,3,0,0" TextWrapping="Wrap" />
                        <TextBlock Name="UniDataVersion" />
                        <TextBlock Name="UniDataCopyright" />
                    </StackPanel>

                </Grid>
            </SplitView.Pane>


            <!-- Tree Panel and main section -->
            <SplitView Name="BlocksSplitView" x:FieldModifier="internal"
                       IsPaneOpen="{x:Bind BlocksToggleButton.IsChecked, Mode=TwoWay, Converter={StaticResource nullableBooleanToBooleanConverter}}"
                       DisplayMode="Inline" PanePlacement="Left" OpenPaneLength="400">

                <SplitView.Pane>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid Margin="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Block" FontWeight="SemiBold" Margin="0,5,12,0" />
                            <AutoSuggestBox Name="BlockFilterTextBox" Grid.Column="1" QueryIcon="Filter" PlaceholderText="Name filter" 
                                    AccessKey="B" AccessKeyInvoked="SetFocus"
                                    Text="{Binding BlockNameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </Grid>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="12,0,12,12">
                            <Button Content="Select all" AccessKey="A" Click="SelectAllButton_Click" Margin="0,0,6,0"/>
                            <Button Content="Unselect all" AccessKey="U" Click="UnselectAllButton_Click" Margin="0,0,12,0" />

                            <Button Command="{Binding ShowLevelCommand}" CommandParameter="3" Content="L3" AccessKey="3" Margin="0,0,6,0" />
                            <Button Command="{Binding ShowLevelCommand}" CommandParameter="2" Content="L2" AccessKey="2" Margin="0,0,6,0" />
                            <Button Command="{Binding ShowLevelCommand}" CommandParameter="1" Content="L1" AccessKey="1" Margin="0,0,6,0" />
                            <Button Command="{Binding ShowLevelCommand}" CommandParameter="0" Content="Block" AccessKey="K" Margin="0,0,12,0" />
                        </StackPanel>

                        <TreeView Grid.Row="2" Name="BlocksTreeView" x:FieldModifier="internal" SelectionMode="Multiple"  Margin="12,0,12,12"
                          ItemInvoked="BlocksTreeView_ItemInvoked" KeyUp="BlocksTreeView_KeyUp" 
                          Tapped="BlocksTreeView_Tapped" DoubleTapped="BlocksTreeView_DoubleTapped" />
                    </Grid>
                </SplitView.Pane>


                <!-- Main section -->
                <Grid Margin="12">
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Default">
                                    <x:Double x:Key="ListViewItemMinHeight">20</x:Double>
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>

                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>


                        <!-- Character Name Filter -->
                        <StackPanel Grid.Row="0">
                            <Grid Margin="0,0,0,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Character" FontWeight="SemiBold" Margin="0,5,12,0" />
                                <AutoSuggestBox Grid.Column="1" Name="CharacterFilterTextBox" PlaceholderText="Name filter"
                                    AccessKey="N" AccessKeyInvoked="SetFocus"
                                    Text="{Binding CharNameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" QueryIcon="Filter" >
                                    <ToolTipService.ToolTip>
                                        <ToolTip Style="{StaticResource LargeTooltipStyle}" Content="Enter a list of words to filter character names, or use an advanced filter." />
                                    </ToolTipService.ToolTip>
                                </AutoSuggestBox>
                                <ToggleButton Name="CharFilterHelp" Grid.Column="2" Content="?" />
                                <Popup IsOpen="{Binding IsChecked, ElementName=CharFilterHelp}" HorizontalOffset="150" VerticalOffset="40" >
                                    <ToolTip Style="{StaticResource LargeTooltipStyle}">
                                        <TextBlock>
                                            Enter a list of words to filter character names (case insensitive, accent insensitive).
                                            <LineBreak/>
                                            Use - before a word to exclude it: <Run Foreground="Green">interro -ornament</Run>.
                                            <LineBreak/>
                                            Put double quotes around a word for an exact match: <Run Foreground="Green">&quot;cat face&quot;</Run>.
                                            <LineBreak/>
                                            A single-letter word is always searched for a strict full-word match.
                                            <LineBreak/>
                                            Use w: to search for full words: <Run Foreground="Green">w:cat</Run> does not match multipli<Bold>cat</Bold>ion.
                                            <LineBreak/>
                                            Use U+ prefix to search for a specific hex codepoint or range: <Run Foreground="Green">U+CAFE</Run> or <Run Foreground="Green">U+0020..00FF</Run>.
                                            <LineBreak/>
                                            Use b: to filter on block name: <Run Foreground="Green">b:Mahjong</Run>.
                                            <LineBreak/>
                                            Use s: to filter on subheader name: <Run Foreground="Green">s:musical</Run>.
                                            <LineBreak/>
                                            Use a: to filter on character age. Also support comparison operators such as <Run Foreground="Green">a:&lt;=10</Run>.
                                            <LineBreak/>
                                            Use l: to filter on letters of a word: <Run Foreground="Green">l:&quot;Où ça?&quot;</Run>.
                                            <LineBreak/>
                                            Use gc: to filer on a Unicode Category: <Run Foreground="Green">gc:D</Run> for digits, or <Run Foreground="Green">gc:LU</Run> for uppercase letters.
                                            <LineBreak/>
                                            Use sc: to filer on a Unicode Script: <Run Foreground="Green">sc:javanese</Run>.
                                        </TextBlock>
                                    </ToolTip>
                                </Popup>
                            </Grid>
                        </StackPanel>

                        <!-- Main display of characters, semantic zoom between grid/list and list of subheaders -->
                        <SemanticZoom Name="CharSemanticView" Grid.Row="1"  Grid.Column="1">
                            <SemanticZoom.ZoomedInView>
                                <GridView Name="CharGridView" x:FieldModifier="internal" SelectedItem="{Binding SelectedChar, Mode=TwoWay}" 
                                          ItemsSource="{Binding CharactersRecordsCVS.View}"
                                          Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                                          PreviewKeyDown="GridViewCell_PreviewKeyDown" RightTapped="CharGridView_RightTapped"
                                          SelectionMode="Extended" SelectionChanged="CharListOrGridView_SelectionChanged">

                                    <GridView.ItemTemplate>
                                        <DataTemplate>
                                            <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="3,3,0,0"
                                                    MinWidth="72" MaxWidth="72" Height="72" DoubleTapped="GridViewCell_DoubleTap" >
                                                <Viewbox>
                                                    <TextBlock Name="CharImage" Text="{Binding Character}"  
                                                               FontSize="48" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-3,0,3" >
                                                    </TextBlock>
                                                </Viewbox>
                                                <Border.ContextFlyout>
                                                    <MenuFlyout>

                                                        <MenuFlyoutItem Text="Copy Chars" Command="{Binding ElementName=MainPage, Path=DataContext.CopyRecordsCommand}" CommandParameter="0"  >
                                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                                <KeyboardAccelerator Modifiers="Control" Key="C" />
                                                            </MenuFlyoutItem.KeyboardAccelerators>
                                                        </MenuFlyoutItem>

                                                        <MenuFlyoutItem Text="Copy Lines" Command="{Binding ElementName=MainPage, Path=DataContext.CopyRecordsCommand}" CommandParameter="1"  >
                                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                                <KeyboardAccelerator Modifiers="Control" Key="L" />
                                                            </MenuFlyoutItem.KeyboardAccelerators>
                                                        </MenuFlyoutItem>

                                                        <MenuFlyoutItem Text="Copy Details" Command="{Binding ElementName=MainPage, Path=DataContext.CopyRecordsCommand}" CommandParameter="2" >
                                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                                <KeyboardAccelerator Modifiers="Control" Key="D" />
                                                            </MenuFlyoutItem.KeyboardAccelerators>
                                                        </MenuFlyoutItem>

                                                        <MenuFlyoutItem Text="Copy Image" Command="{Binding ElementName=MainPage, Path=DataContext.CopyImageCommand}" >
                                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                                <KeyboardAccelerator Key="I" Modifiers="Control"/>
                                                            </MenuFlyoutItem.KeyboardAccelerators>
                                                        </MenuFlyoutItem>
                                                    </MenuFlyout>
                                                </Border.ContextFlyout>
                                            </Border>
                                        </DataTemplate>
                                    </GridView.ItemTemplate>

                                    <GridView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <ContentPresenter Content="{Binding Key.Content}" />
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </GridView.GroupStyle>
                                </GridView>
                            </SemanticZoom.ZoomedInView>

                            <SemanticZoom.ZoomedOutView>
                                <ListView ItemsSource="{Binding CharactersRecordsCVS.View.CollectionGroups}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Group.Key}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </SemanticZoom.ZoomedOutView>
                        </SemanticZoom>



                        <!-- List of filtered characters -->
                        <ListView  Name="CharListView" x:FieldModifier="internal" Grid.Row="1" 
                                   SelectedItem="{Binding SelectedChar, Mode=TwoWay}" ItemsSource="{Binding CharactersRecordsFilteredList}"
                                   Visibility="Collapsed"
                                   Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                                   SelectionMode="Extended" SelectionChanged="CharListOrGridView_SelectionChanged" >

                            <ListView.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Background="{ThemeResource SystemControlBackgroundBaseLowBrush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Char" />
                                        <TextBlock Grid.Column="1" Text="Codepoint" />
                                        <TextBlock Grid.Column="2" Text="Name"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.HeaderTemplate>

                            <ListView.ItemTemplate>
                                <DataTemplate >
                                    <Grid Margin="-12,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Character}" />
                                        <HyperlinkButton Grid.Column="1" Content="{Binding CodepointHex}" 
                                Command="{Binding ElementName=MainPage, Path=DataContext.ShowDetailCommand}"
                                CommandParameter="{Binding Codepoint}"
                                Padding="0" />
                                        <TextBlock Grid.Column="2" Text="{Binding Name}" Margin="0" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>


                        <!-- Selected character detail on main window -->
                        <Grid Grid.Row="2" Margin="0,6,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border BorderThickness="2" BorderBrush="{ThemeResource SystemControlHighlightAltListAccentMediumBrush}" Grid.RowSpan="5" VerticalAlignment="Top" Margin="0,3,12,0"
                                    Width="96" Height="96" >
                                <Border Name="CharImageBorder" Background="White" x:FieldModifier="internal" >
                                    <Viewbox>
                                        <TextBlock Name="CharImage" x:FieldModifier="internal" Foreground="{ThemeResource SystemControlHighlightAltListAccentHighBrush}" Text="{Binding SelectedChar.Character}"  
                                                   FontSize="64" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Viewbox>
                                </Border>
                                <Border.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="Copy Chars" Command="{Binding CopyRecordsCommand}" CommandParameter="0"  >
                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                <KeyboardAccelerator Modifiers="Control" Key="C" />
                                            </MenuFlyoutItem.KeyboardAccelerators>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Text="Copy Lines" Command="{Binding CopyRecordsCommand}" CommandParameter="1"  >
                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                <KeyboardAccelerator Modifiers="Control" Key="L" />
                                            </MenuFlyoutItem.KeyboardAccelerators>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Text="Copy Details" Command="{Binding CopyRecordsCommand}" CommandParameter="2" >
                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                <KeyboardAccelerator Modifiers="Control" Key="D" />
                                            </MenuFlyoutItem.KeyboardAccelerators>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Text="Copy Image" Command="{Binding CopyImageCommand}">
                                            <MenuFlyoutItem.KeyboardAccelerators>
                                                <KeyboardAccelerator Key="I" Modifiers="Control"/>
                                            </MenuFlyoutItem.KeyboardAccelerators>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </Border.ContextFlyout>
                            </Border>


                            <TextBlock Grid.Row="0" Grid.Column="1" Text="UTF-8" FontWeight="SemiBold" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding SelectedChar.UTF8}" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="UTF-16" FontWeight="SemiBold" />
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding SelectedChar.UTF16}" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="Character" FontWeight="SemiBold" />
                            <ContentPresenter Grid.Row="2" Grid.Column="2" Content="{Binding StrContent}" />
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="Block" FontWeight="SemiBold" />
                            <ContentPresenter Grid.Row="3" Grid.Column="2" Content="{Binding BlockContent}" />
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="Subheader " FontWeight="SemiBold" />
                            <ContentPresenter Grid.Row="4" Grid.Column="2" Content="{Binding SubheaderContent}" />
                        </Grid>


                        <!-- Status bar character count/filtered/selected -->
                        <StackPanel Grid.Row="3" Background="{ThemeResource SystemControlBackgroundBaseLowBrush}" Margin="0,6,0,0" Orientation="Horizontal">
                            <TextBlock Text="{Binding NumChars}" />
                            <TextBlock Text=" characters  " />
                            <TextBlock Text="{Binding FilChars}" Margin="18,0,0,0" />
                            <TextBlock Text="  filtered  " />
                            <TextBlock Text="{Binding SelChars}" Margin="18,0,0,0" />
                            <TextBlock Text="  selected      |" />

                            <TextBlock Text="{Binding NumBlocks}" Margin="28,0,0,0"/>
                            <TextBlock Text=" blocks  " />
                            <TextBlock Text="{Binding FilBlocks}" Margin="18,0,0,0" />
                            <TextBlock Text="  filtered  " />
                        </StackPanel>
                    </Grid>
                </Grid>
            </SplitView>
        </SplitView>
    </Grid>

</Page>
